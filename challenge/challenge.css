/* challenge  */
body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
}

main {
  display: flex;
  justify-content: center;
}

.challenge-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 3rem;
}

.challenge-container > * {
  flex: 1 1 50%;
}

.challenge-left {
  max-width: 700px;
  min-width: 50px;
}

h2 {
  font-family: "RozhaOne";
  color: aliceblue;
}

form h3 {
  padding-bottom: 3rem;
}

form {
  display: flex;
  flex-direction: column;
  font-family: "RozhaOne";
  color: antiquewhite;
}

.submit {
  width: 4rem;
}
.reset {
  width: 4rem;
}

.button-home {
  width: 6rem;
  position: absolute;
  top: 30rem;
  right: 30rem;
  border-radius: 10%;
  border: 2px solid black;
  font-weight: 700;
  cursor: pointer;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

/* The container */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
}

/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196f3;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}

.challenge-right {
  margin-left: 3rem;
  align-self: flex-start;
}

.labels {
  display: flex;
  flex-direction: column;
}

/* phones  */
@media screen and (max-width: 767px) {
  body {
    margin-bottom: 2rem;
  }
  main {
    flex-wrap: wrap;
  }
  .challenge-container {
    flex-direction: column;
    max-width: 80%;
  }
  .challenge-left {
    max-height: 40vh;
  }
  .button-home {
    position: static;
  }
}

@media screen and (min-width: 767px) and (max-width: 1024px) {
  body {
    margin-bottom: 2rem;
  }
  main {
    flex-wrap: wrap;
  }
  .challenge-container {
    flex-direction: column;
    max-width: 80%;
  }
  .challenge-left {
    max-height: 40vh;
  }
  .button-home {
    position: static;
  }
}
